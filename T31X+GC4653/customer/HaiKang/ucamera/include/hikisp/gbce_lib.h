/******************************************************************************
*
* 版权信息: Copyright (c) 2013, 杭州海康威视数字技术股份有限公司
* 文件名称：gbce_lib.h
* 文件标识：GBCE_LIB_H
* 摘    要：GBCE（Global Brightness and Contrast Enhancement）算法库的声明头文件
* 作    者: 范蒙 陈碧泉 曾勇 
* 日    期: 2013年9月27日
* 备    注: GBCE算法静态库
*
* 当前版本: 3.1.0 傅斌 2020.4.21
* 版本说明: (2.0.2)支持Gamma曲线固定，调节GBCE曲线实现各项功能 2013.9.27
* 版本说明: (2.1.0)支持Gamma曲线固定和调节曲线分离，以及GBCE曲线实现各项功能，
*                  包括gamma曲线自适应调整、对比度、gamma自动切换、直方图拉伸
*           (3.0.0)支持Gamma曲线固定和调节曲线分离，以及GBCE曲线实现各项功能，
*                  支持动态范围评估和透过率评估功能，用于控制宽动态和透雾相关参数
*                  包括gamma曲线自适应调整、对比度、gamma自动切换、直方图拉伸
*                  直方图均衡。
*           (3.1.0)区分AT模块的统计数据，支持32*32分块输入。修改了HTM模块，
*                  加强其作用效果，并对亮暗区域平滑处理，保证曲线不异常
*******************************************************************************
*/


/*************************************************************************************************
*                          GBCE LIB 使用说明 
*
*    1) 初始化阶段的调用顺序:
*        (1) 获取库内部所需的内存大小:		GBCE_GetMemSize(), 获取内存大小后, 分配相应内存
*        (2) 创建句柄实例:					    GBCE_Create()
*        (3) 根据需求设置key param对应的值:	GBCE_SetKeyParam()
*		 (4) 算法库主流程函数:				GBCE_Process()
*    	
*    2) 在启用后, 如果要重传配置参数, 调用顺序如下:
*        (1) 根据需求设置key param对应的值: GBCE_SetKeyParam() 
*
*    3) 获取版本号和版本时间: GBCE_GetVersion()
*
*    4) 获取状态信息(包括等): GBCE_GetStateParam()
*
*************************************************************************************************/ 

#ifndef __GBCE_LIB_H__
#define __GBCE_LIB_H__

#ifdef __cplusplus
extern "C" {
#endif

#include "mem_tab.h"

 
//#define GBCE_GAMMA_TAB_STABLE //如果定义，则为分离的基础的gamma和对比度调节曲线
	
/*******************************************************************************************************************************
* 文件版本和时间宏声明
*******************************************************************************************************************************/
/* 当前版本号*/
#define HIK_GBCE_MAJOR_VERSION      3  		/* 主版本号，接口改动、功能增加、架构变更时递增，最大63 */
#define HIK_GBCE_SUB_VERSION		1  		/* 子版本号，性能优化、局部结构调整、模块内集成其他库的主版本提升时递增，最大31 */
#define HIK_GBCE_REVISION_VERSION   0  		/* 修正版本号，修正bug后递增，最大31 */

/* 版本日期*/
#define HIK_GBCE_VER_YEAR           20      /* 年*/ 
#define HIK_GBCE_VER_MONTH       	4		/* 月*/
#define HIK_GBCE_VER_DAY            21       /* 日*/


/**************************************************************************************************
* 宏定义
**************************************************************************************************/
#ifndef _HRESULT_DEFINED
#define _HRESULT_DEFINED
typedef int HRESULT;
#endif  /* !_HRESULT_DEFINED */

/* 错误码定义 */
#define HIK_GBCE_LIB_S_OK					0x00000000					  //成功	    
#define HIK_GBCE_LIB_S_FAIL					0x80000001					  //失败	        
#define HIK_GBCE_LIB_E_PARA_NULL			0x80000002    //参数指针为空	    
#define HIK_GBCE_LIB_E_MEM_NULL				0x80000003    //传入的内存为空   
#define HIK_GBCE_LIB_E_MEM_OVER				0x80000004    //内存溢出
#define HIK_GBCE_LIB_E_PARAM_KEY			0x80000005    //错误的参数键值 
#define HIK_GBCE_LIB_E_PARAM_VAL		    0x80000006    //错误的参数值 

/* 所需内存 */
#define HIK_GBCE_MTAB_NUM				    1		      

/* 调试开关 */
//#define _DEBUG_INFO_ENABLE_   


/* GBCE参数调试键值 */
typedef enum _GBCE_PARAM_KEY
{
	// GBCE
	GBCE_SMOOTH_RATIO						= 0x00000010,   //(I) 视频帧间直方图平滑 范围 0~256
	
	// AGC
	GBCE_AGC_EXPO_LEVEL						= 0x00000011,   //(I) 曝光等级，范围 0~255
	GBCE_AGC_SHADOW							= 0x00000012,   //(I) 阴影处理强度，范围 0~255
	GBCE_AGC_HIGHLIGHT						= 0x00000013,   //(I) 高亮处理强度，范围 0~255
	GBCE_AGC_CONTRAST						= 0x00000014,   //(I) 对比度处理强度，范围 0~255
	GBCE_AGC_DRC_IDX						= 0x0000001D,   //(I) DRC曲线索引参数
	GBCE_AGC_USER_CONTRAST					= 0x0000001E,	  //(I) 用户对比度调节强度，范围 0~100

	// HTM
	GBCE_HTM_W_CTRL							= 0x00000015,   //(I) 直方图拉伸强度，范围0~1024*256 
	GBCE_HTM_INDEX_GATE						= 0x00000016,   //(I) 直方图拉伸灰阶阈值，范围0~255
	GBCE_HTM_LUM_GATE						= 0x00000017,   //(I) 直方图拉伸亮度阈值，范围0~255
	GBCE_HTM_MIN_LEVEL						= 0x00000018,   //(I) 直方图拉伸下限，范围0~255
	GBCE_HTM_MAX_LEVEL						= 0x00000019,   //(I) 直方图拉伸上限，范围0~255	

    // AGS 自动gamma切换
    GBCE_AGS_OPEN                           = 0x00000020,   //(I) AGS处理开关，0~1,默认为0
    GBCE_AGS_GAIN_START                     = 0x00000021,   //(I) AGS切换平滑起始增益，范围0-50，默认25
    GBCE_AGS_GAIN_END                       = 0x00000022,   //(I) AGS切换平滑结束增益，范围50-100，默认75
    GBCE_AGS_GAIN_CUR                       = 0x00000023,   //(I) 当前增益   

	//LHT 受限的直方图均衡
	GBCE_LHE_OPEN							= 0x00000030,   //(I) LHE处理开关，0~1，默认为0；
	GBCE_LHE_LMTCOEF						= 0x00000031,   //(I) LHE直方图限制系数，随增益联动，1~1023，默认为2；
	GBCE_LHE_STROPEN						= 0x00000032,	//(I) 增强强度控制使能，0关，1开；
	GBCE_LHE_POSMODE						= 0x00000033, 	//(I) LHE正向增强模式，0~3，默认为3，0为固定权重；
	GBCE_LHE_NEGMODE						= 0x00000034, 	//(I) LHE负向增强模式，0~3，默认为2，0为固定权重；
	GBCE_LHE_LIMITOPEN						= 0x00000035,	//(I) LHE limit功能开关，0关，1开，默认1；
	GBCE_LHE_POSSTR							= 0x00000036,	//(I) LHE固定加权模式的正向增强权重值大小，0~128，默认64；
	GBCE_LHE_NEGSTR							= 0x00000037,	//(I) LHE固定加权模式的负向增强权重值大小，0~128，默认64；
	GBCE_LHE_PRESMOOTH						= 0x00000038,	//(I) LHE映射曲线帧间平滑，防闪烁，0~128，默认96；
	GBCE_LHE_GAINTHD						= 0x00000039,	//(I) LHE强度衰减增益等级阈值，0~100，默认50；
	GBCE_LHE_MINLMTCOEF						= 0x0000003A,	//(I) LHE最小限制系数，1~64，默认1；

	//DR 场景动态范围评估
	GBCE_DR_ENABLE                          = 0x00000040,	//(I) dr模块使能，范围0~1,0关 1开*/ 	
    GBCE_DR_SMOOTH                          = 0x00000041,   //(I) 动态范围平滑权重,相当于平滑速度 [0,256]，默认128
    GBCE_DR_BRIGHT_WGT                      = 0x00000042,   //(I) 亮区选取阈值的权重, 256为1倍, 默认230	
    GBCE_DR_DARK_WGT                        = 0x00000043,   //(I) 暗区选取阈值的权重, 256为1倍，默认280
    GBCE_DR_BLC                             = 0x00000044,   //(I) 黑电平值，默认0

	//AT 场景大气透过率评估
	GBCE_AT_ENABLE                          = 0x00000050,	//(I) at模块使能，范围0~1,0关 1开*/ 	
    GBCE_AT_SMOOTH                          = 0x00000051,   //(I) 透过率平滑权重,相当于平滑速度 [0,256]，默认128

	/**********************  调试接口  ****************************************/
    //版本号和时间 
    GBCE_GET_LIB_INFO			    		= 0x00000080,   //版本信息
    GBCE_DEBUG_PIN							= 0x00000100    //debug_pin;

} GBCE_PARAM_KEY;


/******************************************************************************
* 结构体定义
*******************************************************************************/

/* GBCE创建句柄相关参数 */
/* 注意: 结构体成员指针curve_tab所指向的内存, 需要调用者在外部开辟 */
typedef struct _GBCE_PARAM_STRU
{
	unsigned short*		curve_tab;				//(I) 参数曲线地址;外部写入;可配置; 所占内存字节数:40*256*sizeof(U16)
	unsigned char		reserved[32];           //    保留字段

} GBCE_PARAM;


/* GBCE运行参数  */
/* 注意: 结构体成员指针hist、gbce_lut、gamma_lut所指向的内存, 需要调用者在外部开辟 */
typedef struct _GBCE_PROCESS_PARAM_STRU
{	
	unsigned int*		hist;					//(I) 输入直方图（合成后直方图），256-bins
	unsigned int*		long_hist;			    //(I) 合成前长帧直方图，256-bins
	unsigned int        gain_lev;               //(I) 输入当前帧增益等级；范围0-100
	unsigned short*     day_gamma;             //(I) 照度较好时用的 gamma
    unsigned short*     night_gamma;             //(I) 低照度时用的 gamma
	unsigned short*     zoneavg;                //(I) 分块统计数据指针，(hisi线性模式下用WDR合成后的,wdr模式下用短帧FE的),（NT平台用白平衡统计）,数据要求必须4通道，16bit,0-65535
	unsigned short*     at_zoneavg;             //(I) 用于AT模块的分块统计数据指针,分块SIZE提前确定，编译时要区分。数据要求必须4通道，16bit,0-65535
	unsigned short*		gbce_lut;				//(O) 输出GBCE查找表：表长1024; 范围0-255
	unsigned short*		gamma_lut;				//(O) 输出DM365平台GAMMA表：表长1024(512*OFFSET + 512*差值);范围0-1023
	unsigned char       lum_avg;              	//(O) 输出当前帧经过GBCE查找表后，当前帧的平均亮度；范围0-255
	unsigned short      dynamic_range;          //(O) 输出当前场景动态范围；范围0-4096
	unsigned short      atmp_trans;             //(O) 输出当前场景平均大气透过率；范围0-1，越小说明雾浓度越大

	unsigned char		reserved[31];         	//    保留字段

} GBCE_PROCESS_PARAM;



/*******************************************************************************************************************************
* 接口函数声明
*******************************************************************************************************************************/
/*******************************************************************************************************************************
* 功  能：获取所需内存大小
* 参  数：param      -I 参数结构指针
*          mem_tab    -O 内存申请表
* 返回值：返回状态码
*******************************************************************************************************************************/
HRESULT GBCE_GetMemSize(GBCE_PARAM *param, MEM_TAB mem_tab[HIK_GBCE_MTAB_NUM]); 

/*******************************************************************************************************************************
* 功  能：创建GBCE模块
* 参  数：param      -I 参数结构指针
*          mem_tab    -I 内存申请表
*          **handle   -O 返回GBCE模块句柄
* 返回值：返回状态码
*******************************************************************************************************************************/
HRESULT GBCE_Create(GBCE_PARAM *param, MEM_TAB mem_tab[HIK_GBCE_MTAB_NUM], void **handle); 

/*******************************************************************************************************************************
* 功  能：统计一帧数据
* 参  数：handle  -IO   句柄(handle由GBCE_Create返回)
*          param   -IO   处理参数结构体
* 返回值：返回状态码
*******************************************************************************************************************************/
HRESULT GBCE_Process(void *handle, GBCE_PROCESS_PARAM *param);

/*******************************************************************************************************************************
* 功  能：设置输出内部状态信息的回调函数指针
* 参  数：handle        -IO GBCE模块句柄
*          chan_id       -I 设置通道号id
*          callback_parm -I 回调函数参数数据指针，实现在回调函数中调用库外部数据，如不需要可填NULL
*          callback_func -I 回调函数指针，形式为void (*debug_info_callback)(void *debug_info, U32 size, void *callback_param);
* 返回值：返回状态码
* 备  注：函数内部将callback_func设置为回调函数指针
*******************************************************************************************************************************/
HRESULT GBCE_SetDebugInfoCallback(void *handle, unsigned short chan_id, void *callback_param, void *callback_func);

/*******************************************************************************************************************************
* 功  能：算法库参数调试接口，设置GBCE的算法参数
* 参  数：handle      -IO 模块句柄
*          param_key   -I 参数键
*          param_val   -I 参数键值
* 返回值：返回状态码
*******************************************************************************************************************************/
HRESULT GBCE_SetKeyParam(void *handle, GBCE_PARAM_KEY param_key, int param_val);

/*******************************************************************************************************************************
* 功  能：算法库参数调试接口，获得GBCE的算法参数
* 参  数：handle      -IO 模块句柄
*          param_key   -I 参数键
*          param_val   -O 参数键值
* 返回值：返回状态码
*******************************************************************************************************************************/
HRESULT GBCE_GetKeyParam(void *handle, GBCE_PARAM_KEY param_key, int *param_val);

/*******************************************************************************************************************************
* 功  能：获取当前编码版本信息
* 参  数：无
* 返回值：返回版本信息
* 备  注：版本信息格式为：版本号＋年（7位）＋月（4位）＋日（5位）
*          其中版本号为：主版本号（6位）＋子版本号（5位）＋修正版本号（5位）
*******************************************************************************************************************************/
unsigned int GBCE_GetVersionOld();
void GBCE_GetVersion(unsigned char *build_info_buf);


#ifdef __cplusplus
}
#endif 

#endif /* __GBCE_LIB_H__ */









